#!/usr/bin/env python3

"""Build/dev runner for our game."""

import argparse
import os
import subprocess
import sys


IMAGE = "kadigan"


def sh(*cmd):
    if subprocess.call(cmd):
        sys.exit(1)


def docker(*cmd, ports=(), image=IMAGE):
    cwd = os.getcwd()
    sh("docker", "run", "--rm", "--interactive", "--tty",
        "--volume", f"{cwd}:{cwd}", "--workdir", cwd,
        "--user", f"{os.getuid()}:{os.getgid()}",
        *(arg for port in ports for arg in ["--publish", f"{port}:{port}"]),
        image, *cmd)


def build():
    sh("docker", "build", "--rm", "-t", IMAGE, ".")


def run(cmd):
    docker(*cmd)


def npm(cmd):
    docker("npm", *cmd)


def tsc(watch):
    args = ["--watch"] if watch else []
    docker("npm", "run", "tsc", "--", *args)


def test(watch):
    args = ["--watch"] if watch else []
    docker("npm", "run", "test", "--", *args)


def lint():
    docker("npm", "run", "lint")


def check():
    docker("npm", "run", "check")


def start():
    docker("npm", "run", "start", ports=(1234, 12345))


def notebook():
    docker(image="jupyter/scipy-notebook:42f4c82a07ff", ports=(8888,))


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.set_defaults(action=lambda: parser.print_help())
    subparsers = parser.add_subparsers()

    subparsers.add_parser("build").set_defaults(action=build)

    p = subparsers.add_parser("run")
    p.add_argument("cmd", nargs="*")
    p.set_defaults(action=run)

    p = subparsers.add_parser("npm")
    p.add_argument("cmd", nargs="*")
    p.set_defaults(action=npm)

    p = subparsers.add_parser("tsc")
    p.add_argument("-w", "--watch", action="store_true", help="Watch input files")
    p.set_defaults(action=tsc)

    p = subparsers.add_parser("test")
    p.add_argument("-w", "--watch", action="store_true", help="Watch input files")
    p.set_defaults(action=test)

    subparsers.add_parser("lint").set_defaults(action=lint)
    subparsers.add_parser("check").set_defaults(action=check)
    subparsers.add_parser("start").set_defaults(action=start)
    subparsers.add_parser("notebook").set_defaults(action=notebook)

    args = vars(parser.parse_args())
    action = args.pop("action")
    action(**args)


if __name__ == "__main__":
    main()
